trigger:
- main

variables:
  imageName: java-gitops-app
  imageTag: "$(Build.BuildId)"
  acrLoginServer: gitopsacr12345.azurecr.io
  acrServiceConnection: gitops-acr-conn
  gitOpsRepoUrl: https://$(GITOPS_INFRA_PAT)@github.com/Poojass1998/gitops-infra.git
  gitOpsManifestPath: k8s/deployment.yaml

stages:

# -------------------------
# 1. Build with Maven
# -------------------------
- stage: Build
  displayName: Build (Maven)
  jobs:
  - job: BuildJob
    displayName: Build & Test
    pool:
      name: Default
      demands:
        - agent.name -equals JavaVM
    steps:
    - checkout: self
    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'clean package'
      displayName: "Compile & Package"
    - task: PublishTestResults@2
      inputs:
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        testResultsFormat: 'JUnit'
        failTaskOnFailedTests: true
      displayName: "Publish Test Results"

# -------------------------
# 2. Build & Push Docker Image
# -------------------------
- stage: DockerBuildPush
  displayName: Docker Build & Push
  dependsOn: Build
  jobs:
  - job: DockerJob
    displayName: Build & Push to ACR
    pool:
      name: Default
      demands:
        - agent.name -equals JavaVM
    steps:
    - checkout: self
    - task: Docker@2
      displayName: Build and Push Docker Image
      inputs:
        containerRegistry: $(acrServiceConnection)
        repository: $(imageName)
        command: buildAndPush
        Dockerfile: 'Dockerfile'
        tags: |
          $(imageTag)

# -------------------------
# 3. Trivy Vulnerability Scan
# -------------------------
- stage: TrivyScan
  displayName: Run Trivy Scan
  dependsOn: DockerBuildPush
  jobs:
  - job: TrivyJob
    displayName: Vulnerability Scan
    pool:
      name: Default
      demands:
        - agent.name -equals JavaVM
    steps:
    - script: |
        chmod +x trivy-scan.sh
        ./trivy-scan.sh $(acrLoginServer)/$(imageName):$(imageTag)
      displayName: "Trivy Scan"

# -------------------------
# 4. OWASP ZAP (DAST) Scan
# -------------------------
- stage: ZapScan
  displayName: Run ZAP Scan
  dependsOn: TrivyScan
  jobs:
  - job: ZapJob
    displayName: DAST with ZAP
    pool:
      name: Default
      demands:
        - agent.name -equals JavaVM
    steps:
    - script: |
        chmod +x zap-scan.sh
        ./zap-scan.sh
      displayName: "OWASP ZAP Scan"

# -------------------------
# 5. Update ArgoCD GitOps Manifest
# -------------------------
- stage: UpdateManifest
  displayName: Update Deployment for ArgoCD
  dependsOn: ZapScan
  jobs:
  - job: ManifestJob
    displayName: Update k8s deployment.yaml
    pool:
      name: Default
      demands:
        - agent.name -equals JavaVM
    steps:
    - checkout: self
    - script: |
        echo "Cloning GitOps repo..."
        git clone $(gitOpsRepoUrl) gitops-infra
        cd gitops-infra
        echo "Updating image tag to $(imageTag)..."
        sed -i "s|image:.*|image: $(acrLoginServer)/$(imageName):$(imageTag)|" $(gitOpsManifestPath)
        git config user.email "azure-pipelines@devops.com"
        git config user.name "Azure Pipelines"
        git add $(gitOpsManifestPath)
        git commit -m "Update image to $(imageTag)"
        git push origin main
      displayName: "Commit & Push Manifest Update"

